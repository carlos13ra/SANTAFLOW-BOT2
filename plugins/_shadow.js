const handler = async (m, { conn, args, command, usedPrefix }) => {
  const ownerNumber = '51919199620' // gay si editas esta parte att: shadow_xyz
  const sender = m.sender
  const senderNumber = sender.split('@')[0]
  const user = global.db.data.users[sender]
  global.shadowGifts = global.shadowGifts || {}

  // ======================== üéÅ CREAR REGALO =========================
  if (command === 'shadowregalo') {
    if (!user.coin || user.coin < 1)
      return m.reply('üö´ *No tienes suficientes monedas para crear un regalo.*')

    if (args.length < 3)
      return m.reply(
        `üéÅ *Uso correcto del comando:*\n\n` +
        `> ${usedPrefix + command} <monto> <copias> <nombre>\n\n` +
        `üå∏ *Ejemplo:*\n${usedPrefix + command} 10000 3 RinPremio`
      )

    const monto = parseInt(args[0])
    const copias = parseInt(args[1])
    const nombre = args.slice(2).join(' ')

    if (isNaN(monto) || isNaN(copias))
      return m.reply('‚ùå *Debes ingresar n√∫meros v√°lidos para el monto y las copias.*')

    const costoTotal = monto * copias
    if (user.coin < costoTotal)
      return m.reply(`üí∏ *No tienes suficientes monedas.*\nRequieres ${costoTotal.toLocaleString()} üí∞`)

    // Descuento del creador
    user.coin -= costoTotal

    // Crear token √∫nico
    const token = Math.random().toString(36).substring(2, 10).toUpperCase()
    global.shadowGifts[token] = {
      creador: sender,
      monto,
      copias,
      nombre,
      reclamados: []
    }

    await conn.sendMessage(m.chat, {
      text: `
‚ï≠‚îÅ‚îÅ‚îÅ„Äî üéÅ ùêëùêÑùêÜùêÄùêãùêé ùêÇùêëùêÑùêÄùêÉùêé üå∏ „Äï‚îÅ‚îÅ‚¨£
‚îÇ üß∏ *Creador:* @${senderNumber}
‚îÇ üí∞ *Valor por usuario:* ${monto.toLocaleString()} coins
‚îÇ üì¶ *Copias disponibles:* ${copias}
‚îÇ ü™ô *Token:* ${token}
‚îÇ üéÄ *Nombre:* ${nombre}
‚îÇ 
‚îÇ üïäÔ∏è *Los usuarios pueden reclamar con:*
‚îÇ ${usedPrefix}shadowcanje ${token}
‚îÇ 
‚ï∞‚îÅ‚îÅ‚îÅ„Äî ùêëùê¢ùêß ùêàùê≠ùê®ùê¨ùê°ùê¢ üå∑ „Äï‚îÅ‚îÅ‚¨£
      `,
      mentions: [sender]
    })

    return
  }

  // ======================== ‚òÉÔ∏è CANJEAR REGALO =========================
  if (command === 'shadowcanje') {
    const token = args[0]?.toUpperCase()
    if (!token) return m.reply(`‚ùÑÔ∏è *Uso:* ${usedPrefix + command} <token>\nEjemplo: ${usedPrefix + command} ABC12345`)

    const regalo = global.shadowGifts[token]
    if (!regalo) return m.reply('üéÅ *Ese token no existe o ya fue usado completamente.*')

    if (regalo.reclamados.includes(sender))
      return m.reply('üå∏ *Ya reclamaste este regalo antes.*')

    if (regalo.reclamados.length >= regalo.copias) {
      delete global.shadowGifts[token]
      return m.reply('‚òÉÔ∏è *Todas las copias de este regalo ya fueron reclamadas.*')
    }

    // Aumentar recompensas del usuario
    const receptor = global.db.data.users[sender]
    if (!receptor.coin) receptor.coin = 0
    if (!receptor.exp) receptor.exp = 0
    if (!receptor.joincount) receptor.joincount = 0

    receptor.coin += regalo.monto
    receptor.exp += regalo.monto
    receptor.joincount += regalo.monto

    regalo.reclamados.push(sender)

    const creadorName = await conn.getName(regalo.creador)
    const receptorName = await conn.getName(sender)

    await conn.sendMessage(m.chat, {
      text: `
‚ï≠‚îÅ‚îÅ‚îÅ„Äî ‚òÉÔ∏è ùêÇùêÄùêçùêâùêÑ ùêÑùêóùêàùêìùêéùêíùêé üéÄ „Äï‚îÅ‚îÅ‚¨£
‚îÇ üë§ *Receptor:* ${receptorName}
‚îÇ üíé *Has recibido:* ${regalo.monto.toLocaleString()} coins
‚îÇ üì¶ *Regalo:* ${regalo.nombre}
‚îÇ üßß *De parte de:* ${creadorName}
‚îÇ
‚îÇ üîñ *Token:* ${token}
‚îÇ üéÅ *Copias restantes:* ${regalo.copias - regalo.reclamados.length}
‚îÇ
‚ï∞‚îÅ‚îÅ‚îÅ„Äî ùêëùê¢ùêß ùêàùê≠ùê®ùê¨ùê°ùê¢ üå∑ „Äï‚îÅ‚îÅ‚¨£
      `,
      mentions: [sender, regalo.creador],
      contextInfo: {
        externalAdReply: {
          title: '‚òÉÔ∏è ShadowCanje',
          body: 'Has reclamado un regalo misterioso üå∏',
          thumbnailUrl: 'https://qu.ax/ALOZa.jpg',
          sourceUrl: 'https://github.com/Shadow-nex',
          mediaType: 1,
          renderLargerThumbnail: true
        }
      }
    })

    // Si se agotaron las copias, eliminar
    if (regalo.reclamados.length >= regalo.copias) {
      delete global.shadowGifts[token]
    }

    return
  }
}

// Configuraci√≥n del handler
handler.help = ['shadowregalo', 'shadowcanje']
handler.tags = ['rpg', 'rewards']
handler.command = ['shadowregalo', 'shadowcanje']
handler.register = true
export default handler