import moment from 'moment-timezone'
import fetch from 'node-fetch'

let handler = async (m, { conn, args }) => {
try {
let res = await fetch('https://api.github.com/repos/Yuji-XDev/Rin-Itoshi-Bot')

if (!res.ok) throw new Error('Error al obtener datos del repositorio')
let json = await res.json()

let txt = `‚º¢ ‚ÉòêáΩ.    ùó¶ùóñùó•ùóúùó£ùóß  ‚Ä¢  ùóúùó°ùóôùó¢  ‡¨ò(‡©≠*Àä·µïÀã)‡©≠\n`
txt += `> ‚ùê *Nombre:* ${json.name}\n`
txt += `> ‚úø *Visitas:* ${json.watchers_count}\n`
txt += `> îìï *Peso:* ${(json.size / 1024).toFixed(2)} MB\n`
txt += `> ‚ùÄ *Actualizado:* ${moment(json.updated_at).format('DD/MM/YY - HH:mm:ss')}\n`
txt += `> ‚ú∞ *Url:* ${json.html_url}\n`
txt += `> ‚ú¶ *Forks:* ${json.forks_count}\n`
txt += `> ‚¨£ *Stars:* ${json.stargazers_count}\n`
txt += `> *${dev}*`

await conn.sendMessage(m.chat, {text: txt, contextInfo: { forwardingScore: 999, isForwarded: true, forwardedNewsletterMessageInfo: { newsletterName: channelRD.name, newsletterJid: channelRD.id, }, externalAdReply: { title: packname, body: dev, thumbnailUrl: 'https://files.catbox.moe/3bmdrm.jpg', sourceUrl: redes, mediaType: 1, renderLargerThumbnail: true }}}, {quoted: m})

} catch {
await conn.reply(m.chat, `${msm} Ocurri√≥ un error.`, m)
await m.react(error)
}}

handler.help = ['script']
handler.tags = ['main']
handler.command = ['script', 'sc']
handler.register = true

export default handler
/*


import fetch from 'node-fetch';

let handler = async (m, { conn }) => {
  try {

    const res = await fetch('https://api.github.com/repos/Yuji-XDev/Rin-Itoshi-Bot');
    const data = await res.json();

    if (!data || !data.name) {
      return m.reply('No se pudo obtener informaci√≥n del repositorio.');
    }

    const txt = `‚º¢ ‚ÉòêáΩ.    ùó¶ùóñùó•ùóúùó£ùóß  ‚Ä¢  ùóúùó°ùóôùó¢  ‡¨ò(‡©≠*Àä·µïÀã)‡©≠
‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢‚ñ¢
> ‚ùê ùó°ùóºùó∫ùóØùóøùó≤: ${data.name}
> ‚ú¶ ùóôùòÇùóπùóπ ùó°ùóÆùó∫ùó≤: ${data.full_name}
> ‚ú∞ ùóóùó≤ùòÄùó∞ùóøùó∂ùóΩùó∞ùó∂ùóºÃÅùóª: ${data.description || 'No hay descripci√≥n'}
> ‚úø ùó£ùóøùó∂ùòÉùóÆùó∞ùóÆùó±: ${data.private ? 'Privado' : 'P√∫blico'}
> ‚ùê ùó¢ùòÑùóªùó≤ùóø: ${data.owner.login} ‚úõ
> ‚ú¶ ùó¢ùòÑùóªùó≤ùóø ID: ${data.owner.id} ‚úú
> ‚ú∞ ùó£ùóÆÃÅùó¥ùó∂ùóªùóÆ ùó£ùó≤ùóøùòÄùóºùóªùóÆùóπ: ${data.owner.html_url} ‚úû
> ‚úø ùóòùòÄùòÅùóøùó≤ùóπùóπùóÆùòÄ: ${data.stargazers_count} ‚úì
> ‚ùê ùóôùóºùóøùó∏ùòÄ: ${data.forks_count} ‚ú¶
> ‚ú¶ ùó™ùóÆùòÅùó∞ùóµùó≤ùóøùòÄ: ${data.watchers_count} ‚úê
> ‚ú∞ ùóüùó∂ùó∞ùó≤ùóªùòÄùó≤: ${data.license ? data.license.name : 'N/A'} ‚äπ
> ‚úø ùóüùó≤ùóªùó¥ùòÇùóÆùó∑ùó≤: ${data.language || 'Desconocido'} ‚ùñ
> ‚ùê ùóñùóøùó≤ùóÆùó±ùóº: ${new Date(data.created_at).toLocaleString()} ‚ú†
> ‚ú¶ ùó®ùóπùòÅùó∂ùó∫ùóº ùó£ùòÇùòÄùóµ: ${new Date(data.pushed_at).toLocaleString()} ‚ñ∏
> ‚ú∞ ùó®ùóΩùó±ùóÆùòÅùó≤: ${new Date(data.updated_at).toLocaleString()} ‚óÇ
> ‚úø ùóõùóßùó†ùóü ùó®ùó•ùóü: ${data.html_url} ‚óà
> ‚ùê ùóñùóπùóºùóªùó≤ ùó®ùó•ùóü: ${data.clone_url} ‚óâ
> ‚ú¶ ùóîùóøùó∞ùóµùó∂ùòÉùó≤: ${data.archived ? 'S√≠' : 'No'} ‚ñ∞
> ‚ú∞ ùóôùóºùóøùó∏ùó≤ùóÆùóØùóπùó≤: ${data.allow_forking ? 'S√≠' : 'No'} ‚ñ±

‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ‚éØ
> ${club}`;

    await conn.sendMessage(
      m.chat,
      {
        text: txt,
        contextInfo: {
          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
            newsletterName: channelRD.name,
            newsletterJid: channelRD.id,
          },
          externalAdReply: {
            title: packname,
            body: dev,
            thumbnailUrl: 'https://files.catbox.moe/3bmdrm.jpg',
            sourceUrl: redes,
            mediaType: 1,
            renderLargerThumbnail: true
          }
        }
      },
      { quoted: m }
    );

  } catch (err) {
    console.error(err);
    m.reply('Ocurri√≥ un error al consultar el repositorio.');
  }
};

handler.help = ['script'];
handler.tags = ['main'];
handler.command = ['script', 'sc'];
handler.register = true;

export default handler;*/